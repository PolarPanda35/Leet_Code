class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int sum = 0;
        int max_sum = INT_MIN;//INT_MIN is a macro that specifies that an integer variable cannot store any value below this limit
        for(int i = 0; i < nums.size(); i++){
            sum += nums[i];
            max_sum = max(max_sum, sum);
            if(sum < 0){
                sum = 0;
            }
        }
        return max_sum;        
    }
};

/*
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        return maxSubArray(nums, 0, nums.size() - 1);
    }
private:
    int maxSubArray(vector<int>& nums, int l, int r){
        if(l > r) {
            return INT_MIN;
        }
        int m = (r + l) / 2;
        int ml = 0;
        int mr = 0;
        int lmax = maxSubArray(nums, l, m-1);
        int rmax = maxSubArray(nums, m + 1 , r);
        if(l == r){
            return nums[l];
        }
        for(int i = m - 1, sum = 0; i >= l; i--){
            sum += nums[i];
            ml = max(sum, ml);
        }
        for(int i = m + 1, sum = 0; i <= r; i++){
            sum += nums[i];
            mr = max(sum, mr);
        }
        return max(max(lmax, rmax), ml + mr + nums[m]);
    }
    
};
*/
